{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","className","style","backgroundColor","defaultProps","Header","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24bbda1f.chunk.js","sourcesContent":["\nimport PropTypes from 'prop-types'\n\nconst Button = ({ text, color, onClick}) => {\n    return (\n        <button\n            onClick = {onClick}\n            className='btn'\n            style={{backgroundColor: color}}>\n                {text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\nButton.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","\nimport Button from './Button'\n\nconst Header = ({ onAdd, showAdd }) => {\n    return (\n        <header className='header'>\n            <h1>Task Tracker</h1>\n            <Button \n                color={showAdd ? 'red' : 'green'}\n                text={showAdd ? 'Close' : 'Add'} \n                onClick={onAdd} \n            />\n        </header>\n    )\n}\n\nexport default Header\n","\nimport { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`}\n            onDoubleClick={() => onToggle(task.id)}>\n            <h3>\n                {task.text}{' '}\n                <FaTimes\n                    style={{color: 'red', cursor: 'pointer'}}\n                    onClick={() => onDelete(task.id)}\n                />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","\nimport Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {tasks.map((task) => (\n                <Task key={task.id}\n                    task={task}\n                    onDelete={onDelete} \n                    onToggle={onToggle}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n\n","\nimport { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n       \n        if(!text) {\n            alert('Please add a task')\n            return\n        } \n\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Add Task\" \n                    value={text} \n                    onChange={(e) => setText(e.target.value)} \n                />\n            </div>\n            <div className=\"form-control\">\n                <label>Day & Time</label>\n                <input\n                    type=\"text\" \n                    placeholder=\"Add Day & Time\" \n                    value={day} \n                    onChange={((e) => setDay(e.target.value))} \n                />\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Reminder</label>\n                <input\n                    type=\"checkbox\" \n                    checked={reminder}\n                    value={reminder}\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\n                />\n            </div>\n\n            <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\" />\n        </form>\n    )\n}\n\nexport default AddTask\n\n","\nimport { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n    const [showAddTask, setShowAddTask] = useState(false)\n\n    const [tasks, setTasks] = useState([\n        {\n            id: 1,\n            text: 'Doctors appointment',\n            day: 'Feb 5th at 2:30pm',\n            reminder: true,\n        },\n        {\n            id: 2,\n            text: 'Meeing at school',\n            day: 'Feb 6th at 1:30pm',\n            reminder: true,\n        },\n        {\n            id: 3,\n            text: 'Food shopping',\n            day: 'Feb 5th at 2:30pm',\n            reminder: false,\n        },\n    ])\n\n    // Add Task\n    const addTask = (task) => {\n        const id = Math.floor((Math.random() * 10000)) + 1\n        const newTask = { id, ...task }\n\n        setTasks([...tasks, newTask])\n    }\n\n    // Delete Task\n    const deleteTask = (id) => {\n        setTasks(tasks.filter((task) => task.id !== id))\n    }\n\n    // Toggle Reminder\n    const toggleReminder = (id) => {\n        setTasks(tasks.map((task) =>\n            task.id === id ? {...task, reminder: !task.reminder} : task))\n    }\n\n    return (\n        <div className=\"container\">\n            <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n            { showAddTask && <AddTask onAdd={addTask} /> }\n\n            {tasks.length > 0 ? (\n                <Tasks tasks={tasks}\n                    onDelete={deleteTask} \n                    onToggle={toggleReminder}\n                /> \n            ) : (\n                'No tasks to show'\n            )}\n        </div>\n    );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}